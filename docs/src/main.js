//import { isValid } from './lib/parser';
class Citizen {
    constructor(firstName, lastName, city) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.city = city;
        this.fullName = firstName + " " + lastName + " from " + city;
    }
}
function greeter(person) {
    return person.firstName + " " + person.lastName;
}
function activate(id) {
    let element = document.getElementById(id);
    element.classList.add('active');
}
function post() {
    let para = document.createElement('h2');
    para.setAttribute('id', 'world');
    let student = new Citizen("Hello", ", World! ", "Watsonville, CA");
    let string = greeter(student);
    console.log(string);
    let node = document.createTextNode(string);
    para.appendChild(node);
    document.body.appendChild(para);
    setTimeout(cb => {
        let child = document.getElementById('world');
        child.parentNode.removeChild(child);
    }, 4000);
}
function post2() {
    let para = document.createElement('h2');
    para.setAttribute('id', 'test2');
    let node = document.createTextNode("We are currently under construction...  In the meantime, checkout the ''More'' tab to see how I'm building this website:");
    para.appendChild(node);
    document.body.appendChild(para);
    setTimeout(cb => {
        let child = document.getElementById('test2');
        child.parentNode.removeChild(child);
    }, 4000);
}
function reload() {
    location.reload();
}
// function check(str:string) {
// 	return "The parenthese string is " + isValid(str) + "!"
// }

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUNBQXlDO0FBRXpDLE1BQU0sT0FBTztJQUdaLFlBQW1CLFNBQWlCLEVBQVMsUUFBZ0IsRUFBUyxJQUFZO1FBQS9ELGNBQVMsR0FBVCxTQUFTLENBQVE7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNqRixJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsR0FBRyxHQUFHLEdBQUcsUUFBUSxHQUFHLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDOUQsQ0FBQztDQUNEO0FBT0QsU0FBUyxPQUFPLENBQUUsTUFBYztJQUMvQixPQUFPLE1BQU0sQ0FBQyxTQUFTLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDakQsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLEVBQVU7SUFDM0IsSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMxQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxDQUFDO0FBRUQsU0FBUyxJQUFJO0lBQ1osSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQTtJQUNoQyxJQUFJLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDbkUsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEIsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUNmLElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0MsS0FBSyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBRVYsQ0FBQztBQUVELFNBQVMsS0FBSztJQUNiLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQywwSEFBMEgsQ0FBQyxDQUFDO0lBQy9KLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkIsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQ2YsSUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QyxLQUFLLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDVixDQUFDO0FBRUQsU0FBUyxNQUFNO0lBQ2QsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ25CLENBQUM7QUFFRCwrQkFBK0I7QUFDL0IsMkRBQTJEO0FBQzNELElBQUkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vaW1wb3J0IHsgaXNWYWxpZCB9IGZyb20gJy4vbGliL3BhcnNlcic7XHJcblxyXG5jbGFzcyBDaXRpemVuIHtcclxuXHRmdWxsTmFtZTogc3RyaW5nO1xyXG5cclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgZmlyc3ROYW1lOiBzdHJpbmcsIHB1YmxpYyBsYXN0TmFtZTogc3RyaW5nLCBwdWJsaWMgY2l0eTogc3RyaW5nKSB7XHJcblx0XHR0aGlzLmZ1bGxOYW1lID0gZmlyc3ROYW1lICsgXCIgXCIgKyBsYXN0TmFtZSArIFwiIGZyb20gXCIgKyBjaXR5O1xyXG5cdH1cclxufVxyXG5cclxuaW50ZXJmYWNlIFBlcnNvbiB7XHJcblx0Zmlyc3ROYW1lOiBzdHJpbmc7XHJcblx0bGFzdE5hbWU6IHN0cmluZztcclxufVxyXG5cclxuZnVuY3Rpb24gZ3JlZXRlciAocGVyc29uOiBQZXJzb24pOiBzdHJpbmcge1xyXG5cdHJldHVybiBwZXJzb24uZmlyc3ROYW1lICsgXCIgXCIgKyBwZXJzb24ubGFzdE5hbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFjdGl2YXRlKGlkOiBzdHJpbmcpOiB2b2lkIHtcclxuXHRsZXQgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcclxuXHRlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBwb3N0KCk6IGFueSB7XHJcblx0bGV0IHBhcmEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG5cdHBhcmEuc2V0QXR0cmlidXRlKCdpZCcsICd3b3JsZCcpXHJcblx0bGV0IHN0dWRlbnQgPSBuZXcgQ2l0aXplbihcIkhlbGxvXCIsIFwiLCBXb3JsZCEgXCIsIFwiV2F0c29udmlsbGUsIENBXCIpO1xyXG5cdGxldCBzdHJpbmcgPSBncmVldGVyKHN0dWRlbnQpO1xyXG5cdGNvbnNvbGUubG9nKHN0cmluZyk7XHJcblx0bGV0IG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdHJpbmcpO1xyXG5cdHBhcmEuYXBwZW5kQ2hpbGQobm9kZSk7XHJcblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYXJhKTtcclxuXHRzZXRUaW1lb3V0KGNiID0+IHtcclxuXHRcdGxldCBjaGlsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3b3JsZCcpO1xyXG5cdFx0Y2hpbGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjaGlsZCk7XHJcblx0fSwgNDAwMCk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBwb3N0MigpOiBhbnkge1xyXG5cdGxldCBwYXJhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcclxuXHRwYXJhLnNldEF0dHJpYnV0ZSgnaWQnLCd0ZXN0MicpO1xyXG5cdGxldCBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJXZSBhcmUgY3VycmVudGx5IHVuZGVyIGNvbnN0cnVjdGlvbi4uLiAgSW4gdGhlIG1lYW50aW1lLCBjaGVja291dCB0aGUgJydNb3JlJycgdGFiIHRvIHNlZSBob3cgSSdtIGJ1aWxkaW5nIHRoaXMgd2Vic2l0ZTpcIik7XHJcblx0cGFyYS5hcHBlbmRDaGlsZChub2RlKTtcclxuXHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBhcmEpO1xyXG5cdHNldFRpbWVvdXQoY2IgPT4ge1xyXG5cdFx0bGV0IGNoaWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3QyJyk7XHJcblx0XHRjaGlsZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGNoaWxkKTtcclxuXHR9LCA0MDAwKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVsb2FkKCk6IHZvaWQge1xyXG5cdGxvY2F0aW9uLnJlbG9hZCgpO1xyXG59XHJcblxyXG4vLyBmdW5jdGlvbiBjaGVjayhzdHI6c3RyaW5nKSB7XHJcbi8vIFx0cmV0dXJuIFwiVGhlIHBhcmVudGhlc2Ugc3RyaW5nIGlzIFwiICsgaXNWYWxpZChzdHIpICsgXCIhXCJcclxuLy8gfSJdfQ==
